%!PS-Adobe-3.0 EPSF-3.0
%%Creator: gEDA gschem 1.8.1-20121123-13-g875406c
%%CreationDate: Mon Jan  5 11:27:33 2015
%%Title: /home/samuel/Dropbox/_Tecnico_/73_Complementos de Electronica/Laborat√≥rio/5_PregoQueLevita/esquematico.sch
%%Author: (null)
%%BoundingBox: 0 0 1224 792
%%Orientation: Portrait
%%Pages: 1
%%EndComments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
0 0 translate
1.000000 1.000000 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 161.777776 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 161.777776 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 161.777776 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 161.777776 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
gsave
false false false false 161.777776 [(LM741) ] 0 41625 46450 144.444443 text
grestore
41600 46300 41400 46300 10 line
gsave
false false false false 161.777776 [(2) ] 0 41450 46325 144.444443 text
grestore
41600 46700 41400 46700 10 line
gsave
false false false false 161.777776 [(3) ] 0 41450 46725 144.444443 text
grestore
41900 46300 41900 46100 10 line
gsave
false false false false 161.777776 [(4) ] 0 41925 46150 144.444443 text
grestore
42200 46500 42400 46500 10 line
gsave
false false false false 161.777776 [(6) ] 0 42275 46525 144.444443 text
grestore
41900 46700 41900 46900 10 line
gsave
false false false false 161.777776 [(7) ] 0 41950 46775 144.444443 text
grestore
41600 46900 41600 46100 10 line
42200 46500 41600 46900 10 line
41700 46750 41700 46650 10 line
41650 46700 41750 46700 10 line
41650 46300 41750 46300 10 line
42200 46500 41600 46100 10 line
newpath
42400 46500
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(U1) ] 0 41500 47000 180.555557 text
grestore
gsave
gsave
false false false false 161.777776 [(LM741) ] 0 45025 46450 144.444443 text
grestore
45000 46300 44800 46300 10 line
gsave
false false false false 161.777776 [(2) ] 0 44850 46325 144.444443 text
grestore
45000 46700 44800 46700 10 line
gsave
false false false false 161.777776 [(3) ] 0 44850 46725 144.444443 text
grestore
45300 46300 45300 46100 10 line
gsave
false false false false 161.777776 [(4) ] 0 45325 46150 144.444443 text
grestore
45600 46500 45800 46500 10 line
gsave
false false false false 161.777776 [(6) ] 0 45675 46525 144.444443 text
grestore
45300 46700 45300 46900 10 line
gsave
false false false false 161.777776 [(7) ] 0 45350 46775 144.444443 text
grestore
45000 46900 45000 46100 10 line
45600 46500 45000 46900 10 line
45100 46750 45100 46650 10 line
45050 46700 45150 46700 10 line
45050 46300 45150 46300 10 line
45600 46500 45000 46100 10 line
newpath
45800 46500
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(U2) ] 0 44900 47000 180.555557 text
grestore
gsave
gsave
false false false false 161.777776 [(LM741) ] 0 46925 45150 144.444443 text
grestore
46900 45000 46700 45000 10 line
gsave
false false false false 161.777776 [(2) ] 0 46750 45025 144.444443 text
grestore
46900 45400 46700 45400 10 line
gsave
false false false false 161.777776 [(3) ] 0 46750 45425 144.444443 text
grestore
47200 45000 47200 44800 10 line
gsave
false false false false 161.777776 [(4) ] 0 47225 44850 144.444443 text
grestore
47500 45200 47700 45200 10 line
gsave
false false false false 161.777776 [(6) ] 0 47575 45225 144.444443 text
grestore
47200 45400 47200 45600 10 line
gsave
false false false false 161.777776 [(7) ] 0 47250 45475 144.444443 text
grestore
46900 45600 46900 44800 10 line
47500 45200 46900 45600 10 line
47000 45450 47000 45350 10 line
46950 45400 47050 45400 10 line
46950 45000 47050 45000 10 line
47500 45200 46900 44800 10 line
newpath
46700 45000
25
0 360 arc
fill
newpath
47700 45200
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(U3) ] 0 46800 45700 180.555557 text
grestore
gsave
gsave
false false false false 161.777776 [(LM741) ] 0 49125 44950 144.444443 text
grestore
49100 44800 48900 44800 10 line
gsave
false false false false 161.777776 [(2) ] 0 48950 44825 144.444443 text
grestore
49100 45200 48900 45200 10 line
gsave
false false false false 161.777776 [(3) ] 0 48950 45225 144.444443 text
grestore
49400 44800 49400 44600 10 line
gsave
false false false false 161.777776 [(4) ] 0 49425 44650 144.444443 text
grestore
49700 45000 49900 45000 10 line
gsave
false false false false 161.777776 [(6) ] 0 49775 45025 144.444443 text
grestore
49400 45200 49400 45400 10 line
gsave
false false false false 161.777776 [(7) ] 0 49450 45275 144.444443 text
grestore
49100 45400 49100 44600 10 line
49700 45000 49100 45400 10 line
49200 45250 49200 45150 10 line
49150 45200 49250 45200 10 line
49150 44800 49250 44800 10 line
49700 45000 49100 44600 10 line
newpath
49900 45000
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(U4) ] 0 49000 45500 180.555557 text
grestore
gsave
gsave
false false false false 161.777776 [(LM741) ] 0 52025 44750 144.444443 text
grestore
52000 44600 51800 44600 10 line
gsave
false false false false 161.777776 [(2) ] 0 51850 44625 144.444443 text
grestore
52000 45000 51800 45000 10 line
gsave
false false false false 161.777776 [(3) ] 0 51850 45025 144.444443 text
grestore
52300 44600 52300 44400 10 line
gsave
false false false false 161.777776 [(4) ] 0 52325 44450 144.444443 text
grestore
52600 44800 52800 44800 10 line
gsave
false false false false 161.777776 [(6) ] 0 52675 44825 144.444443 text
grestore
52300 45000 52300 45200 10 line
gsave
false false false false 161.777776 [(7) ] 0 52350 45075 144.444443 text
grestore
52000 45200 52000 44400 10 line
52600 44800 52000 45200 10 line
52100 45050 52100 44950 10 line
52050 45000 52150 45000 10 line
52050 44600 52150 44600 10 line
52600 44800 52000 44400 10 line
newpath
52800 44800
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(U5) ] 0 51900 45300 180.555557 text
grestore
gsave
43700 47300 43900 47200 10 line
43900 47200 43700 47100 10 line
43700 47100 43900 47000 10 line
43900 47000 43700 46900 10 line
43700 47300 43900 47400 10 line
43900 47400 43800 47450 10 line
43800 47600 43800 47450 10 line
43800 46700 43800 46852 10 line
43700 46901 43800 46850 10 line
43800 47150 300 0 360 10 darc
newpath
43800 46700
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(R3) ] 90 43600 46700 180.555557 text
grestore
gsave
43100 45500 43100 45300 10 line
43100 44800 43100 44600 10 line
43400 45000 43600 45000 10 line
43000 44800 43200 44800 10 line
43200 44800 43200 45300 10 line
43200 45300 43000 45300 10 line
43000 45300 43000 44800 10 line
43400 45000 43200 45000 10 line
43200 45000 43300 45050 10 line
43200 45000 43300 44950 10 line
grestore
gsave
false false false false 202.222224 [(R5) ] 0 43350 44700 180.555557 text
grestore
gsave
false false false false 202.222224 [(10K) ] 90 43200 44900 180.555557 text
grestore
gsave
43800 46700 43800 46550 10 line
43800 45800 43800 45950 10 line
43700 45950 43900 45950 10 line
43900 45950 43900 46550 10 line
43900 46550 43700 46550 10 line
43700 46550 43700 45950 10 line
newpath
43800 46700
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(R4) ] 90 44100 46000 180.555557 text
grestore
gsave
false false false false 202.222224 [(300) ] 90 43900 46000 180.555557 text
grestore
gsave
40400 47600 40400 47450 10 line
40400 46700 40400 46850 10 line
40300 46850 40500 46850 10 line
40500 46850 40500 47450 10 line
40500 47450 40300 47450 10 line
40300 47450 40300 46850 10 line
newpath
40400 46700
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(R2) ] 90 40700 46900 180.555557 text
grestore
gsave
false false false false 202.222224 [(10K) ] 90 40500 46900 180.555557 text
grestore
gsave
40400 46700 40400 46550 10 line
40400 45800 40400 45950 10 line
40300 45950 40500 45950 10 line
40500 45950 40500 46550 10 line
40500 46550 40300 46550 10 line
40300 46550 40300 45950 10 line
newpath
40400 46700
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(R1) ] 90 40700 46000 180.555557 text
grestore
gsave
false false false false 202.222224 [(5.6K) ] 90 40500 46000 180.555557 text
grestore
gsave
47700 43300 47550 43300 10 line
46800 43300 46950 43300 10 line
46950 43200 47550 43200 10 line
47550 43200 47550 43400 10 line
47550 43400 46950 43400 10 line
46950 43400 46950 43200 10 line
grestore
gsave
false false false false 202.222224 [(R9) ] 0 47000 43400 180.555557 text
grestore
gsave
false false false false 202.222224 [(56K) ] 0 47000 43200 180.555557 text
grestore
gsave
46200 45000 46050 45000 10 line
45300 45000 45450 45000 10 line
45450 44900 46050 44900 10 line
46050 44900 46050 45100 10 line
46050 45100 45450 45100 10 line
45450 45100 45450 44900 10 line
grestore
gsave
false false false false 202.222224 [(R8) ] 0 45500 45200 180.555557 text
grestore
gsave
false false false false 202.222224 [(56K) ] 0 45500 44900 180.555557 text
grestore
gsave
46300 46500 46300 46350 10 line
46300 45600 46300 45750 10 line
46200 45750 46400 45750 10 line
46400 45750 46400 46350 10 line
46400 46350 46200 46350 10 line
46200 46350 46200 45750 10 line
newpath
46300 46500
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(R6) ] 90 46600 45800 180.555557 text
grestore
gsave
false false false false 202.222224 [(56K) ] 90 46400 45800 180.555557 text
grestore
gsave
47200 46500 47050 46500 10 line
46300 46500 46450 46500 10 line
46450 46400 47050 46400 10 line
47050 46400 47050 46600 10 line
47050 46600 46450 46600 10 line
46450 46600 46450 46400 10 line
newpath
46300 46500
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(R7) ] 0 46500 46700 180.555557 text
grestore
gsave
false false false false 202.222224 [(56K) ] 0 46500 46400 180.555557 text
grestore
gsave
48800 44000 48800 43850 10 line
48800 43100 48800 43250 10 line
48700 43250 48900 43250 10 line
48900 43250 48900 43850 10 line
48900 43850 48700 43850 10 line
48700 43850 48700 43250 10 line
newpath
48800 44000
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(R10) ] 90 49100 43300 180.555557 text
grestore
gsave
false false false false 202.222224 [(1K) ] 90 48900 43300 180.555557 text
grestore
gsave
49900 44000 49750 44000 10 line
49000 44000 49150 44000 10 line
49150 43900 49750 43900 10 line
49750 43900 49750 44100 10 line
49750 44100 49150 44100 10 line
49150 44100 49150 43900 10 line
grestore
gsave
false false false false 202.222224 [(R11) ] 0 49300 43700 180.555557 text
grestore
gsave
false false false false 202.222224 [(15K) ] 0 49200 43900 180.555557 text
grestore
gsave
50900 44900 50900 44750 10 line
50900 44000 50900 44150 10 line
50800 44150 51000 44150 10 line
51000 44150 51000 44750 10 line
51000 44750 50800 44750 10 line
50800 44750 50800 44150 10 line
grestore
gsave
false false false false 202.222224 [(R12) ] 90 51200 44200 180.555557 text
grestore
gsave
false false false false 202.222224 [(2.2K) ] 90 51000 44200 180.555557 text
grestore
gsave
46800 43900 47000 43900 10 line
47700 43900 47500 43900 10 line
47200 44100 47200 43700 10 line
47300 44100 47300 43700 10 line
47500 43900 47300 43900 10 line
47200 43900 47000 43900 10 line
newpath
47700 43900
25
0 360 arc
fill
newpath
47700 43900
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(C1) ] 0 46900 44000 180.555557 text
grestore
gsave
false false false false 202.222224 [(1u) ] 0 46900 43700 180.555557 text
grestore
gsave
50200 45200 50200 44800 10 line
50200 45200 50500 45000 10 line
50500 45000 50200 44800 10 line
50500 45200 50500 44800 10 line
49900 45000 50100 45000 10 line
50800 45000 50600 45000 10 line
50600 45000 50500 45000 10 line
50200 45000 50100 45000 10 line
newpath
49900 45000
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(D1) ] 0 50200 45300 180.555557 text
grestore
gsave
53900 46200 53900 46000 10 line
gsave
false false false false 121.333336 [(3) ] 0 53800 46050 108.333336 text
grestore
53900 45400 53900 45200 10 line
gsave
false false false false 121.333336 [(2) ] 0 53800 45250 108.333336 text
grestore
53800 45701 300 0 360 10 darc
53900 45400 53700 45600 10 line
53900 46000 53700 45800 10 line
53700 45900 53700 45500 10 line
53300 45700 53484 45700 10 line
gsave
false false false false 121.333336 [(1) ] 0 53400 45750 108.333336 text
grestore
53700 45700 53484 45700 10 line
53900 45400 53864 45472 10 line
53900 45400 53828 45436 10 line
53828 45436 53864 45472 10 line
gsave
false false false false 202.222224 [(2N3055) ] 0 54200 45500 180.555557 text
grestore
grestore
gsave
false false false false 202.222224 [(Q1) ] 0 54200 45700 180.555557 text
grestore
gsave
53900 43600 53900 43800 10 line
gsave
false false false true 121.333336 [(C) ] 0 53800 43750 108.333336 text
grestore
53900 44400 53900 44600 10 line
gsave
false false false true 121.333336 [(E) ] 0 53800 44550 108.333336 text
grestore
53800 44099 316 0 360 10 darc
53900 44400 53700 44200 10 line
53900 43800 53700 44000 10 line
53700 43900 53700 44300 10 line
53300 44100 53484 44100 10 line
gsave
false false false true 121.333336 [(B) ] 0 53400 44050 108.333336 text
grestore
53700 44100 53484 44100 10 line
10 setlinewidth
53740 44310 moveto 53700 44199 lineto 53795 44245 lineto 53765 44265 lineto closepath stroke
53740 44310 moveto 53700 44199 lineto 53795 44245 lineto 53765 44265 lineto closepath fill
grestore
gsave
false false false true 202.222224 [(MJ2955) ] 0 54200 44100 180.555557 text
grestore
gsave
false false false true 202.222224 [(Q2) ] 0 54200 44300 180.555557 text
grestore
40400 46700 41400 46700 10 line
gsave
40400 45600 40400 45800 10 line
40300 45600 40500 45600 10 line
40355 45550 40445 45550 10 line
40380 45510 40420 45510 10 line
grestore
gsave
40400 47600 40400 47800 10 line
40250 47800 40550 47800 10 line
gsave
false false false false 161.777776 [(Vdd) ] 0 40275 47850 144.444443 text
grestore
grestore
gsave
41900 46900 41900 47100 10 line
41750 47100 42050 47100 10 line
gsave
false false false false 161.777776 [(Vdd) ] 0 41775 47150 144.444443 text
grestore
grestore
gsave
45300 46900 45300 47100 10 line
45150 47100 45450 47100 10 line
gsave
false false false false 161.777776 [(Vdd) ] 0 45175 47150 144.444443 text
grestore
grestore
gsave
47200 45600 47200 45800 10 line
47050 45800 47350 45800 10 line
gsave
false false false false 161.777776 [(Vdd) ] 0 47075 45850 144.444443 text
grestore
grestore
gsave
49400 45400 49400 45600 10 line
49250 45600 49550 45600 10 line
gsave
false false false false 161.777776 [(Vdd) ] 0 49275 45650 144.444443 text
grestore
grestore
gsave
52300 45200 52300 45400 10 line
52150 45400 52450 45400 10 line
gsave
false false false false 161.777776 [(Vdd) ] 0 52175 45450 144.444443 text
grestore
grestore
gsave
53900 46200 53900 46400 10 line
53750 46400 54050 46400 10 line
gsave
false false false false 161.777776 [(Vdd) ] 0 53775 46450 144.444443 text
grestore
grestore
gsave
41900 46100 41900 45900 10 line
42050 45900 41750 45900 10 line
gsave
false true false true 161.777776 [(Vss) ] 0 42025 45850 144.444443 text
grestore
grestore
gsave
45300 46100 45300 45900 10 line
45450 45900 45150 45900 10 line
gsave
false true false true 161.777776 [(Vss) ] 0 45425 45850 144.444443 text
grestore
grestore
gsave
47200 44800 47200 44600 10 line
47350 44600 47050 44600 10 line
gsave
false true false true 161.777776 [(Vss) ] 0 47325 44550 144.444443 text
grestore
grestore
gsave
49400 44600 49400 44400 10 line
49550 44400 49250 44400 10 line
gsave
false true false true 161.777776 [(Vss) ] 0 49525 44350 144.444443 text
grestore
grestore
gsave
52300 44400 52300 44200 10 line
52450 44200 52150 44200 10 line
gsave
false true false true 161.777776 [(Vss) ] 0 52425 44150 144.444443 text
grestore
grestore
gsave
53900 43500 53900 43300 10 line
54050 43300 53750 43300 10 line
gsave
false true false true 161.777776 [(Vss) ] 0 54025 43250 144.444443 text
grestore
grestore
41400 46300 41400 45500 10 line
41400 45500 42400 45500 10 line
44800 46700 43800 46700 10 line
44800 46300 44800 45500 10 line
44800 45500 45800 45500 10 line
45800 45500 45800 46500 10 line
gsave
43800 45600 43800 45800 10 line
43700 45600 43900 45600 10 line
43755 45550 43845 45550 10 line
43780 45510 43820 45510 10 line
grestore
43800 47600 43800 47700 10 line
gsave
43100 44400 43100 44600 10 line
43000 44400 43200 44400 10 line
43055 44350 43145 44350 10 line
43080 44310 43120 44310 10 line
grestore
46200 45000 46700 45000 10 line
45300 45000 43600 45000 10 line
46700 43300 46700 45000 10 line
46700 43900 46800 43900 10 line
46700 43300 46800 43300 10 line
47700 43300 47700 45200 10 line
46300 45400 46700 45400 10 line
46300 46500 45800 46500 10 line
gsave
47200 46300 47200 46500 10 line
47100 46300 47300 46300 10 line
47155 46250 47245 46250 10 line
47180 46210 47220 46210 10 line
grestore
46300 45400 46300 45600 10 line
42400 45500 42400 46500 10 line
42400 46500 43100 46500 10 line
43100 45500 43100 47700 10 line
43100 47700 43800 47700 10 line
48900 44800 48800 44800 10 line
48800 44800 48800 44000 10 line
49900 44000 49900 45000 10 line
gsave
48800 42900 48800 43100 10 line
48700 42900 48900 42900 10 line
48755 42850 48845 42850 10 line
48780 42810 48820 42810 10 line
grestore
48800 44000 49000 44000 10 line
47700 45200 48900 45200 10 line
51800 45000 50800 45000 10 line
50900 45000 50900 44900 10 line
gsave
50900 43800 50900 44000 10 line
50800 43800 51000 43800 10 line
50855 43750 50945 43750 10 line
50880 43710 50920 43710 10 line
grestore
51800 44600 51800 43900 10 line
51800 43900 52800 43900 10 line
52800 43900 52800 44800 10 line
53900 43600 53900 43500 10 line
53300 44100 53300 45700 10 line
53300 44800 52800 44800 10 line
53900 45200 53900 44600 10 line
gsave
55500 44800 55500 44650 10 line
55500 43900 55500 44050 10 line
55500 44137 75 90 270 10 darc
55500 44279 75 90 270 10 darc
55500 44421 75 90 270 10 darc
55500 44563 75 90 270 10 darc
55500 44638 55500 44650 10 line
55500 44050 55500 44062 10 line
55500 44208 4 270 450 10 darc
55500 44350 4 270 450 10 darc
55500 44492 4 270 450 10 darc
grestore
gsave
false false false false 202.222224 [(L1) ] 90 55300 44100 180.555557 text
grestore
gsave
55500 43700 55500 43900 10 line
55400 43700 55600 43700 10 line
55455 43650 55545 43650 10 line
55480 43610 55520 43610 10 line
grestore
gsave
48300 46900 48300 46700 10 line
gsave
false true false false 161.777776 [(1) ] 270 48350 46750 144.444443 text
grestore
48300 46000 48300 46200 10 line
gsave
false false false false 161.777776 [(2) ] 270 48350 46150 144.444443 text
grestore
48400 46500 48300 46400 10 line
48300 46400 48200 46500 10 line
48400 46500 48200 46500 10 line
48400 46400 48200 46400 10 line
48300 46400 48300 46200 10 line
48300 46500 48300 46700 10 line
48300 46450 200 0 360 10 darc
48603 46384 48704 46283 10 line
48704 46283 48655 46279 10 line
48655 46279 48757 46178 10 line
48518 46416 48618 46315 10 line
48618 46315 48569 46311 10 line
48569 46311 48670 46210 10 line
grestore
gsave
false false false false 202.222224 [(LED?) ] 90 48100 45900 180.555557 text
grestore
gsave
48300 47800 48300 47650 10 line
48300 46900 48300 47050 10 line
48200 47050 48400 47050 10 line
48400 47050 48400 47650 10 line
48400 47650 48200 47650 10 line
48200 47650 48200 47050 10 line
grestore
gsave
false false false false 202.222224 [(R0) ] 90 48600 47100 180.555557 text
grestore
gsave
false false false false 202.222224 [(100) ] 90 48400 47100 180.555557 text
grestore
gsave
48300 47800 48300 48000 10 line
48150 48000 48450 48000 10 line
gsave
false false false false 161.777776 [(Vdd) ] 0 48175 48050 144.444443 text
grestore
grestore
gsave
48300 45800 48300 46000 10 line
48200 45800 48400 45800 10 line
48255 45750 48345 45750 10 line
48280 45710 48320 45710 10 line
grestore
55500 44800 53900 44800 10 line
newpath
42400 46500
25
0 360 arc
fill
newpath
45800 46500
25
0 360 arc
fill
newpath
46700 45000
25
0 360 arc
fill
newpath
47700 45200
25
0 360 arc
fill
newpath
49900 45000
25
0 360 arc
fill
newpath
52800 44800
25
0 360 arc
fill
newpath
43800 46700
25
0 360 arc
fill
newpath
43800 46700
25
0 360 arc
fill
newpath
40400 46700
25
0 360 arc
fill
newpath
40400 46700
25
0 360 arc
fill
newpath
46300 46500
25
0 360 arc
fill
newpath
46300 46500
25
0 360 arc
fill
newpath
48800 44000
25
0 360 arc
fill
newpath
47700 43900
25
0 360 arc
fill
newpath
47700 43900
25
0 360 arc
fill
newpath
49900 45000
25
0 360 arc
fill
newpath
40400 46700
25
0 360 arc
fill
newpath
43800 46700
25
0 360 arc
fill
newpath
45800 46500
25
0 360 arc
fill
newpath
46700 45000
25
0 360 arc
fill
newpath
46700 45000
25
0 360 arc
fill
newpath
46700 43900
25
0 360 arc
fill
newpath
46700 43900
25
0 360 arc
fill
newpath
46700 43900
25
0 360 arc
fill
newpath
47700 45200
25
0 360 arc
fill
newpath
47700 43900
25
0 360 arc
fill
newpath
46300 46500
25
0 360 arc
fill
newpath
45800 46500
25
0 360 arc
fill
newpath
42400 46500
25
0 360 arc
fill
newpath
42400 46500
25
0 360 arc
fill
newpath
43100 46500
25
0 360 arc
fill
newpath
43100 46500
25
0 360 arc
fill
newpath
43100 46500
25
0 360 arc
fill
newpath
48800 44000
25
0 360 arc
fill
newpath
49900 45000
25
0 360 arc
fill
newpath
48800 44000
25
0 360 arc
fill
newpath
47700 45200
25
0 360 arc
fill
newpath
50900 45000
25
0 360 arc
fill
newpath
50900 45000
25
0 360 arc
fill
newpath
50900 45000
25
0 360 arc
fill
newpath
52800 44800
25
0 360 arc
fill
newpath
53300 44800
25
0 360 arc
fill
newpath
53300 44800
25
0 360 arc
fill
newpath
52800 44800
25
0 360 arc
fill
newpath
53300 44800
25
0 360 arc
fill
newpath
53900 44800
25
0 360 arc
fill
newpath
53900 44800
25
0 360 arc
fill
newpath
53900 44800
25
0 360 arc
fill
showpage
%%End
